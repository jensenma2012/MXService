<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
    http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.2.xsd">

	<security:http pattern="/backdoor" security="none" />

	<security:http pattern="/backdoor/captcha**" security="none" />

	<security:http>
		<security:csrf disabled="true" />
		<security:headers>
			<security:frame-options policy="SAMEORIGIN" />
		</security:headers>

		<security:access-denied-handler error-page="/backdoor/unauthorized" />
		<security:form-login login-page="/backdoor" login-processing-url="/backdoor/login" authentication-failure-url="/backdoor"
			default-target-url="/backdoor/main" always-use-default-target="true" />
		<security:logout invalidate-session="true" logout-success-url="/backdoor" logout-url="/backdoor/logout" />

		<security:intercept-url pattern="/backdoor/artist/list" access="hasRole('ROLE_ARTIST')" />
		<security:intercept-url pattern="/backdoor/artist/add" access="hasRole('ROLE_ARTIST_ADD')" />
		<security:intercept-url pattern="/backdoor/artist/save" access="hasRole('ROLE_ARTIST_ADD')" />
		<security:intercept-url pattern="/backdoor/artist/edit" access="hasRole('ROLE_ARTIST_EDIT')" />
		<security:intercept-url pattern="/backdoor/artist/update" access="hasRole('ROLE_ARTIST_EDIT')" />
		<security:intercept-url pattern="/backdoor/album/list" access="hasRole('ROLE_ALBUM')" />
		<security:intercept-url pattern="/backdoor/album/add" access="hasRole('ROLE_ALBUM_ADD')" />
		<security:intercept-url pattern="/backdoor/album/save" access="hasRole('ROLE_ALBUM_ADD')" />
		<security:intercept-url pattern="/backdoor/album/edit" access="hasRole('ROLE_ALBUM_EDIT')" />
		<security:intercept-url pattern="/backdoor/album/update" access="hasRole('ROLE_ALBUM_EDIT')" />
		<security:intercept-url pattern="/backdoor/album/refresh" access="hasRole('ROLE_ALBUM_REFRESH')" />
		<security:intercept-url pattern="/backdoor/album/delete" access="hasRole('ROLE_ALBUM_DELETE')" />
		<security:intercept-url pattern="/backdoor/music/list" access="hasRole('ROLE_MUSIC')" />
		<security:intercept-url pattern="/backdoor/music/add" access="hasRole('ROLE_MUSIC_ADD')" />
		<security:intercept-url pattern="/backdoor/music/save" access="hasRole('ROLE_MUSIC_ADD')" />
		<security:intercept-url pattern="/backdoor/music/edit" access="hasRole('ROLE_MUSIC_EDIT')" />
		<security:intercept-url pattern="/backdoor/music/update" access="hasRole('ROLE_MUSIC_EDIT')" />
		<security:intercept-url pattern="/backdoor/music/delete" access="hasRole('ROLE_MUSIC_DELETE')" />
		<security:intercept-url pattern="/backdoor/admin/list" access="hasRole('ROLE_ADMIN')" />
		<security:intercept-url pattern="/backdoor/admin/add" access="hasRole('ROLE_ADMIN_ADD')" />
		<security:intercept-url pattern="/backdoor/admin/save" access="hasRole('ROLE_ADMIN_ADD')" />
		<security:intercept-url pattern="/backdoor/admin/edit" access="hasRole('ROLE_ADMIN_EDIT')" />
		<security:intercept-url pattern="/backdoor/admin/update" access="hasRole('ROLE_ADMIN_EDIT')" />
		<security:intercept-url pattern="/backdoor/role/list" access="hasRole('ROLE_ROLE')" />
		<security:intercept-url pattern="/backdoor/role/add" access="hasRole('ROLE_ROLE_ADD')" />
		<security:intercept-url pattern="/backdoor/role/save" access="hasRole('ROLE_ROLE_ADD')" />
		<security:intercept-url pattern="/backdoor/role/edit" access="hasRole('ROLE_ROLE_EDIT')" />
		<security:intercept-url pattern="/backdoor/role/update" access="hasRole('ROLE_ROLE_EDIT')" />
		<security:intercept-url pattern="/backdoor/config/list" access="hasRole('ROLE_CONFIG')" />
		<security:intercept-url pattern="/backdoor/config/add" access="hasRole('ROLE_CONFIG_ADD')" />
		<security:intercept-url pattern="/backdoor/config/save" access="hasRole('ROLE_CONFIG_ADD')" />
		<security:intercept-url pattern="/backdoor/config/edit" access="hasRole('ROLE_CONFIG_EDIT')" />
		<security:intercept-url pattern="/backdoor/config/update" access="hasRole('ROLE_CONFIG_EDIT')" />
		<security:intercept-url pattern="/backdoor/config/refresh" access="hasRole('ROLE_CONFIG_REFRESH')" />
		<security:intercept-url pattern="/backdoor/config/delete" access="hasRole('ROLE_CONFIG_DELETE')" />
		<security:intercept-url pattern="/backdoor/**" access="hasRole('ROLE_BASE')" />
	</security:http>

	<security:authentication-manager>
		<security:authentication-provider user-service-ref="adminService">
			<security:password-encoder ref="passwordEncoder">
				<security:salt-source system-wide="admin" />
			</security:password-encoder>
		</security:authentication-provider>
	</security:authentication-manager>

	<bean id="webexpressionHandler" class="org.springframework.security.web.access.expression.DefaultWebSecurityExpressionHandler" />

	<bean id="passwordEncoder" class="org.springframework.security.authentication.encoding.ShaPasswordEncoder">
		<constructor-arg value="256" />
	</bean>

	<bean id="imageCaptchaService" class="com.octo.captcha.service.image.DefaultManageableImageCaptchaService">
		<property name="captchaEngine">
			<bean class="com.xiaoma.captcha.CaptchaEngine" />
		</property>
		<property name="minGuarantedStorageDelayInSeconds" value="3600" />
	</bean>

	<bean id="captchaService" class="com.xiaoma.service.impl.CaptchaServiceImpl" />

</beans>