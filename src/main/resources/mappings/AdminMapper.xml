<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiaoma.mybatis.mapper.AdminMapper">
	<resultMap id="AdminResult" type="Admin">
		<id property="id" column="admin_id" />
		<result property="username" column="username" />
		<result property="password" column="password" />
		<result property="accountNonExpired" column="is_account_non_expired" />
		<result property="accountNonLocked" column="is_account_non_locked" />
		<result property="enabled" column="is_account_enabled" />
		<result property="credentialsNonExpired" column="is_credentials_non_expired" />
		<result property="createDate" column="admin_createDate" />

		<association property="role" column="role_id" javaType="Role">
			<id property="id" column="role_id" />
			<result property="name" column="name" />
			<result property="authorityList" column="authority_list" />
			<result property="description" column="description" />
			<result property="createDate" column="role_createDate" />
		</association>
	</resultMap>

	<insert id="save" useGeneratedKeys="true" keyProperty="id" parameterType="Admin">
		insert into admin
		(username, password, is_account_non_expired, is_account_non_locked, is_account_enabled, is_credentials_non_expired, createDate, role_id)
		values
		(#{username}, #{password}, #{accountNonExpired}, #{accountNonLocked}, #{enabled}, #{credentialsNonExpired}, now(), #{role.id})
	</insert>

	<update id="update" parameterType="Admin">
		update admin
		<set>
			<if test="password != null">
				password = #{password},
			</if>
			<if test="role.id != null">
				role_id = #{role.id},
			</if>
			<if test="enabled != null">
				is_account_enabled = #{enabled},
			</if>
			username = username
		</set>
		where id = #{id}
	</update>

	<select id="queryCount" parameterType="PageCondition" resultType="long">
		select
		count(*)
		from admin
		<if test="keyword != null">
			where username like CONCAT('%',#{keyword},'%')
		</if>
	</select>

	<select id="queryList" parameterType="PageCondition" resultMap="AdminResult">
		select
		admin.id as admin_id,
		admin.username as username,
		admin.password as password,
		admin.is_account_non_expired as is_account_non_expired,
		admin.is_account_non_locked as is_account_non_locked,
		admin.is_credentials_non_expired as is_credentials_non_expired,
		admin.is_account_enabled as is_account_enabled,
		admin.createDate as admin_createDate,
		role.id as role_id,
		role.name as name,
		role.authority_list as authority_list,
		role.description as description,
		role.createDate as role_createDate
		from admin
		left outer join role on admin.role_id=role.id
		<if test="keyword != null">
			where username like CONCAT('%',#{keyword},'%')
		</if>
		limit #{startIndex}, #{number}
	</select>

	<select id="queryById" parameterType="Long" resultMap="AdminResult">
		select
		admin.id as admin_id,
		admin.username as username,
		admin.password as password,
		admin.is_account_non_expired as is_account_non_expired,
		admin.is_account_non_locked as is_account_non_locked,
		admin.is_credentials_non_expired as is_credentials_non_expired,
		admin.is_account_enabled as is_account_enabled,
		admin.createDate as admin_createDate,
		role.id as role_id,
		role.name as name,
		role.authority_list as authority_list,
		role.description as description,
		role.createDate as role_createDate
		from admin
		left outer join role on admin.role_id=role.id
		where admin.id = #{id}
	</select>

	<select id="queryByUsername" parameterType="String" resultMap="AdminResult">
		select
		admin.id as admin_id,
		admin.username as username,
		admin.password as password,
		admin.is_account_non_expired as is_account_non_expired,
		admin.is_account_non_locked as is_account_non_locked,
		admin.is_credentials_non_expired as is_credentials_non_expired,
		admin.is_account_enabled as is_account_enabled,
		admin.createDate as admin_createDate,
		role.id as role_id,
		role.name as name,
		role.authority_list as authority_list,
		role.description as description,
		role.createDate as role_createDate
		from admin
		left outer join role on admin.role_id=role.id
		where username = #{username}
	</select>

</mapper>